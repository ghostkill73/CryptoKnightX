#!/usr/bin/env bash
############################################################
# autor               : ghostkill <github.com/ghostkill73>
# versão do instalador: 0.0.1b
# script              : install.knight
# modo de uso         :
# chmod 700 install.ckx
# ./install.ckx
# EXECUTE ESTE SCRIPT COMO ROOT!!!!
############################################################
# configurações

# Desativando unicodes no input
LC_ALL=C
LANG=C


############################################################
# variáveis

# cores
CGREEN="\e[1;32m"
CbRED="\e[48;5;160m"
CYELLOW="\e[1;33m"
CNO="\e[0m"


############################################################
# funções

# utilitários
sleep() { read -rt "$1" <> <(:) || :; }
erro() { echo -e "${CbRED}[!!] "$@"${CNO}"; exit 1; }
sucesso() { echo -e "${CGREEN}[+] "$@"${CNO}"; }
aviso() { echo -e "${CYELLOW}[!] "$@"${CNO}"; }

# verificação e instalação
instalador() {
[[ -d "/usr/bin" ]] && aviso "'/usr/bin' encontrado" || erro "'/usr/bin' não foi encontrado"
[[ -e "./ckx" ]] && aviso "arquivo principal ckx encontrado" || erro "o arquivo principal de execução ckx não foi encontrado."
# [[ -d "/.rules.d" ]] && aviso "'/.rules.d/' não foi detectado" || erro "'/.rules.d/' foi encontrado na raiz '/'. abortando processo..."
# [[ -d "/mnt/.room" ]] && aviso "'/mnt/.room' não foi detectado" || erro "'/mnt/.room' foi encontrado. abortando processo..."
[[ ! -e "/usr/bin/ckx" ]] && aviso "'/usr/bin/ckx' não foi encontrado" || erro "'/usr/bin/ckx' encontrado. abortando processo..."

sucesso "diretórios verificados, iniciando instalação..."; sleep 3

cp "./ckx" "/usr/bin/ckx" && aviso "copiando './ckx' para '/usr/bin'" || erro "não foi possível copiar './ckx' para '/usr/bin'"
[[ -e "/usr/bin/ckx" ]] && sucesso "'/usr/bin/ckx' encontrado" || erro "'/usr/bin/ckx' não foi encontrado"
chmod 700 "/usr/bin/ckx" && sucesso "permissão 700 concedido para '/usr/bin/ckx'" || erro "não foi possível conceder permissão 700 para '/usr/bin/ckx'"
}

# iniciar instalador
inicio() {
sucesso "Perfil root detectado, preparando processo de instalação..."

read -p $'Iniciar instalação do software CryptoKnightX? (y/n): ' confirmacao
case "$confirmacao" in
	[yY]*) instalador ;;
	[nN]*) aviso "processo cancelado."; exit 0 ;;
	*) erro "opção inválida." ;;
esac
}

# mensagem pós-instalação
info() {
cat << EOF

 Knight foi instalado com sucesso, digite "knight" para
 utilizar o programa.

EOF
}


############################################################
# script

[[ "$EUID" != '0' ]] && exit 1

# instalador
[[ "$?" = 0 ]] && inicio && info
