#!/usr/bin/env bash
#----------------------------------------------------------------------------------+
# autor  : Abner Benedito
# github : ghostkill73
#
declare _ckx_version="v0.0.3b"
#
# licença: GPLv3+
#----------------------------------------------------------------------------------+
#
# CryptoKnightX é uma fork!
# Projeto originado por Jefferson Rocha:
# <https://notabug.org/slackjeff/knight>
#
#----------------------------------------------------------------------------------+
# Copyright (C) 2024  Abner Benedito
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#----------------------------------------------------------------------------------+
# DESCRIÇÃO:
#
# O objetivo deste software é manter a segurança e integridade de seus documentos.
# O CKX foi feito em sua maior parte em bash script puro, isso significa que ele
# funcionará corretamenta na maioria das distribuições linux, sem que tenham de
# depender de muitos pacotes terceiros.
#
# Dependências fundamentais:
#	- GNU Tar 1.3+
#	- GNU Privacy Guard (gpg) 2.2+
#	- GNU Bash (Bourne-Again Shell) 4+
#
# Avisos:
#
#	* Os desenvolvedores deste software não se responsabilizam
#	pelo uso indevido desta ferramenta;
#
#	* O CKX não segue o padrão SHELL POSIX;
#
#	* Certifique-se de não perder sua senha dos arquivos
#	criptografados, se perder já era! a chance de conseguir
#	quebrar a criptografia é mínima;
#
#	* Nenhum sistema é seguro, proteja sua integridade.
#	tenha em mente que um dia você será hackeado, procure
#	reduzir riscos. Não utilize somente o CKX para proteger
#	seus documentos mas também proteja sua máquina como um
#	todo.
#
# Boas práticas:
#
#	* ter uma senha de usuário root forte;
#
#	* criptografar o armazenamento(HDD,SSD,...) da máquina;
#
#	* utilizar uma senha com no mínimo 8 caracteres
#	sem possuir um padrão óbvio, colocando caracteres
#	como `#$@%`;
#
#	* troca periódica das senhas;
#
#	* se possível utilize gerenciadores de senhas off-line
#	como o `keepassXC` por exemplo, donde possibilita copiar
#	e colar a sua senha;
#
#	* Fazer backups constantes e armazená-los em um local
#	seguro;
#
# Contribuindo:
#
#	* Sempre procure fazer um script puro, utilizando os recursos
#	que o BASH possue;
#
#	* Não adicione utilitários terceiros não-livres e/ou que fujam
# 	do escopo das dependências fundamentais do software;
#
#	* Certifique-se de que as modificações estão corretas, livres
#	de problemas.
#
#----------------------------------------------------------------------------------+

########################################################################################
#
# DEBUG
# - utilize o debug para verificar erros
#
########################################################################################

# 0 true
# >= 1 false
declare _ckx_debug=1
[[ ! "$_ckx_debug" -ge '1' ]] && set -x


########################################################################################
#
# Variáveis globais
# - nome do software
# - diretório principal
# - variáveis de retorno
# - variáveis de configuração
#
########################################################################################

declare _ckx_software_name="CryptoKnightX"
declare _ckx_dir="$HOME/.ckx/"

declare _ckx_true=0
declare _ckx_false=1
declare _ckx_error=2

declare _global_cdpath="$PWD"


########################################################################################
#
# pré-verificação
# - verificando root
# - verificando HOME
# - verificando $HOME/.ckx/
#
########################################################################################

# verificando se o usuário está executando como root.
[[ "$EUID" != '0' ]] && {
	printf '%s\n' "Permissão negada: verifique se está executando como root."
	exit 1
}

# verificando se $HOME está definido.
: ${HOME?"a variável HOME não está definida."}

# verificando se $HOME/.ckx/ existe, caso contrário cria o diretório.
[[ ! -d "$_ckx_dir" ]] && {
	mkdir -p "$_ckx_dir" 2>&-
}


########################################################################################
#
# utilitários para o bom funcionamento do software
#
########################################################################################

msg()
{
	printf '%b\n' "$*" 2>/dev/null
}

die()
{
	msg "\e[41m${*}\e[m"

	exit ${_ckx_false}
}

sucess()
{
	msg "\e[1;32m${*}\e[m"

	return ${_ckx_true}
}


########################################################################################
#
# informações
#
########################################################################################

short_license()
{
	msg " ${_ckx_software_name} ${_ckx_version} Copyright (C) 2024  Abner Benedito"
	msg " This program comes with ABSOLUTELY NO WARRANTY"
	msg " This is free software, and you are welcome to redistribute it"
	msg " under certain conditions."
	msg ""
	msg " Digite a opção '--help' para mais detalhes."

	exit ${_ckx_false}
}

display_license()
{
	msg " ${_ckx_software_name} ${_ckx_version} Copyright (C) 2024  Abner Benedito"
	msg ""
	msg " This program is free software: you can redistribute it and/or modify"
	msg " it under the terms of the GNU General Public License as published by"
	msg " the Free Software Foundation, either version 3 of the License, or"
	msg " (at your option) any later version."
	msg ""
	msg " This program is distributed in the hope that it will be useful,"
	msg " but WITHOUT ANY WARRANTY; without even the implied warranty of"
	msg " MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the"
	msg " GNU General Public License for more details."
	msg ""
	msg " You should have received a copy of the GNU General Public License"
	msg " along with this program.  If not, see <https://www.gnu.org/licenses/>."

	exit ${_ckx_true}
}


display_version()
{
	msg " ${_ckx_software_name} ${_ckx_version} Copyright (C) 2024  Abner Benedito"

	exit ${_ckx_true}
}

display_help()
{
	msg "${_ckx_software_name} ${_ckx_version} Copyright (C) 2024  Abner Benedito"
	msg " This program comes with ABSOLUTELY NO WARRANTY"
	msg " This is free software, and you are welcome to redistribute it"
	msg " under certain conditions."
	msg ""
	msg "Utilize: ckx [OPÇÃO]"
	msg "CryptoKnightX é um encriptador de arquivos ocultos."
	msg ""
	msg "  -h, --help                 mostra esta mensagem e termina."
	msg "  -v, --version              mostra a versão do software e termina."
	msg "  -l, --license              mostra a licença do software e termina."
	msg "  -s, --start                inicia o software."
	msg ""
	msg "contribua e/ou reporte bugs em: <github.com/ghostkill73/CryptoKnightX>"

	exit ${_ckx_true}
}


########################################################################################
#
# função principal
#
########################################################################################

main()
{
	local __commands__=

	#clear

	cd ${_ckx_dir}

	[[ -e "${_ckx_dir}/data.tar.gpg" ]] && {
		gpg --quiet -o data.tar --no-symkey-cache \
		-d data.tar.gpg || \
		{
			die "Operação cancelada ou senha incorreta."
		}

		tar -xvf data.tar

		rm -vr data{.tar,.tar.gpg}
	}

	[[ -d "${_ckx_dir}/data/" ]] || {
		mkdir -p ./data/ 2>&-
	}

	# desativando CTRL+C
	trap "echo utilize o comando 'exit' para sair." SIGINT

	msg "\e[1;31m --||////[CRYPTOKNIGHTX]////>\e[m"

	while :; do
		read -ep $'\e[1;31m<ckx> \e[m' __commands__

		case "$__commands__" in

			exit|quit)
				cd ${_ckx_dir}

				tar -cvf data.tar ./data/

				gpg --no-symkey-cache -c --cipher-algo \
				AES256 data.tar || continue

				rm -vr ./data/ data.tar

				cd ${_global_cdpath}

				trap - SIGINT
				exit ${_ckx_true}
			;;

			*)
				eval "${__commands__}"
			;;

		esac # esac __commands__
	done # while main
}


#----------------------------------------------------------------------------------+
####################################### SCRIPT #####################################

# Parametros para rodar em linha
case "$1" in #dev

	-s|--start) main ;;

	-h|--help) display_help ;;

	-l|--license) display_license ;;

	-v|--version) display_version ;;

	*) short_license ;;

esac


##################################### END SCRIPT ###################################
#----------------------------------------------------------------------------------+
